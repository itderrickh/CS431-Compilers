/* This file was generated by SableCC (http://www.sablecc.org/). */

package Project5.node;

import Project5.analysis.*;

@SuppressWarnings("nls")
public final class AIncrementStmt extends PStmt
{
    private TId _id_;
    private TSubset _subset_;
    private TPlus _plus_;
    private TPlus _dblplus_;
    private TSemicolon _semicolon_;

    public AIncrementStmt()
    {
        // Constructor
    }

    public AIncrementStmt(
        @SuppressWarnings("hiding") TId _id_,
        @SuppressWarnings("hiding") TSubset _subset_,
        @SuppressWarnings("hiding") TPlus _plus_,
        @SuppressWarnings("hiding") TPlus _dblplus_,
        @SuppressWarnings("hiding") TSemicolon _semicolon_)
    {
        // Constructor
        setId(_id_);

        setSubset(_subset_);

        setPlus(_plus_);

        setDblplus(_dblplus_);

        setSemicolon(_semicolon_);

    }

    @Override
    public Object clone()
    {
        return new AIncrementStmt(
            cloneNode(this._id_),
            cloneNode(this._subset_),
            cloneNode(this._plus_),
            cloneNode(this._dblplus_),
            cloneNode(this._semicolon_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIncrementStmt(this);
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public TSubset getSubset()
    {
        return this._subset_;
    }

    public void setSubset(TSubset node)
    {
        if(this._subset_ != null)
        {
            this._subset_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._subset_ = node;
    }

    public TPlus getPlus()
    {
        return this._plus_;
    }

    public void setPlus(TPlus node)
    {
        if(this._plus_ != null)
        {
            this._plus_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._plus_ = node;
    }

    public TPlus getDblplus()
    {
        return this._dblplus_;
    }

    public void setDblplus(TPlus node)
    {
        if(this._dblplus_ != null)
        {
            this._dblplus_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dblplus_ = node;
    }

    public TSemicolon getSemicolon()
    {
        return this._semicolon_;
    }

    public void setSemicolon(TSemicolon node)
    {
        if(this._semicolon_ != null)
        {
            this._semicolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._semicolon_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._id_)
            + toString(this._subset_)
            + toString(this._plus_)
            + toString(this._dblplus_)
            + toString(this._semicolon_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._subset_ == child)
        {
            this._subset_ = null;
            return;
        }

        if(this._plus_ == child)
        {
            this._plus_ = null;
            return;
        }

        if(this._dblplus_ == child)
        {
            this._dblplus_ = null;
            return;
        }

        if(this._semicolon_ == child)
        {
            this._semicolon_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(this._subset_ == oldChild)
        {
            setSubset((TSubset) newChild);
            return;
        }

        if(this._plus_ == oldChild)
        {
            setPlus((TPlus) newChild);
            return;
        }

        if(this._dblplus_ == oldChild)
        {
            setDblplus((TPlus) newChild);
            return;
        }

        if(this._semicolon_ == oldChild)
        {
            setSemicolon((TSemicolon) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
