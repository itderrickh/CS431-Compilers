/* This file was generated by SableCC (http://www.sablecc.org/). */

package Project5.node;

import java.util.*;
import Project5.analysis.*;

@SuppressWarnings("nls")
public final class ABooltailVarlisttwo extends PVarlisttwo
{
    private PBoolean _boolean_;
    private final LinkedList<PVarlisttwotail> _varlisttwotail_ = new LinkedList<PVarlisttwotail>();

    public ABooltailVarlisttwo()
    {
        // Constructor
    }

    public ABooltailVarlisttwo(
        @SuppressWarnings("hiding") PBoolean _boolean_,
        @SuppressWarnings("hiding") List<?> _varlisttwotail_)
    {
        // Constructor
        setBoolean(_boolean_);

        setVarlisttwotail(_varlisttwotail_);

    }

    @Override
    public Object clone()
    {
        return new ABooltailVarlisttwo(
            cloneNode(this._boolean_),
            cloneList(this._varlisttwotail_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABooltailVarlisttwo(this);
    }

    public PBoolean getBoolean()
    {
        return this._boolean_;
    }

    public void setBoolean(PBoolean node)
    {
        if(this._boolean_ != null)
        {
            this._boolean_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._boolean_ = node;
    }

    public LinkedList<PVarlisttwotail> getVarlisttwotail()
    {
        return this._varlisttwotail_;
    }

    public void setVarlisttwotail(List<?> list)
    {
        for(PVarlisttwotail e : this._varlisttwotail_)
        {
            e.parent(null);
        }
        this._varlisttwotail_.clear();

        for(Object obj_e : list)
        {
            PVarlisttwotail e = (PVarlisttwotail) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._varlisttwotail_.add(e);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._boolean_)
            + toString(this._varlisttwotail_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._boolean_ == child)
        {
            this._boolean_ = null;
            return;
        }

        if(this._varlisttwotail_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._boolean_ == oldChild)
        {
            setBoolean((PBoolean) newChild);
            return;
        }

        for(ListIterator<PVarlisttwotail> i = this._varlisttwotail_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PVarlisttwotail) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
