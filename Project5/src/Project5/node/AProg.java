/* This file was generated by SableCC (http://www.sablecc.org/). */

package Project5.node;

import Project5.analysis.*;

@SuppressWarnings("nls")
public final class AProg extends PProg
{
    private TBegin _begin_;
    private PClassmethodstmts _classmethodstmts_;
    private TEnd _end_;

    public AProg()
    {
        // Constructor
    }

    public AProg(
        @SuppressWarnings("hiding") TBegin _begin_,
        @SuppressWarnings("hiding") PClassmethodstmts _classmethodstmts_,
        @SuppressWarnings("hiding") TEnd _end_)
    {
        // Constructor
        setBegin(_begin_);

        setClassmethodstmts(_classmethodstmts_);

        setEnd(_end_);

    }

    @Override
    public Object clone()
    {
        return new AProg(
            cloneNode(this._begin_),
            cloneNode(this._classmethodstmts_),
            cloneNode(this._end_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAProg(this);
    }

    public TBegin getBegin()
    {
        return this._begin_;
    }

    public void setBegin(TBegin node)
    {
        if(this._begin_ != null)
        {
            this._begin_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._begin_ = node;
    }

    public PClassmethodstmts getClassmethodstmts()
    {
        return this._classmethodstmts_;
    }

    public void setClassmethodstmts(PClassmethodstmts node)
    {
        if(this._classmethodstmts_ != null)
        {
            this._classmethodstmts_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._classmethodstmts_ = node;
    }

    public TEnd getEnd()
    {
        return this._end_;
    }

    public void setEnd(TEnd node)
    {
        if(this._end_ != null)
        {
            this._end_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._end_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._begin_)
            + toString(this._classmethodstmts_)
            + toString(this._end_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._begin_ == child)
        {
            this._begin_ = null;
            return;
        }

        if(this._classmethodstmts_ == child)
        {
            this._classmethodstmts_ = null;
            return;
        }

        if(this._end_ == child)
        {
            this._end_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._begin_ == oldChild)
        {
            setBegin((TBegin) newChild);
            return;
        }

        if(this._classmethodstmts_ == oldChild)
        {
            setClassmethodstmts((PClassmethodstmts) newChild);
            return;
        }

        if(this._end_ == oldChild)
        {
            setEnd((TEnd) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
