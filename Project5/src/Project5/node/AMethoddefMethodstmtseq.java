/* This file was generated by SableCC (http://www.sablecc.org/). */

package Project5.node;

import Project5.analysis.*;

@SuppressWarnings("nls")
public final class AMethoddefMethodstmtseq extends PMethodstmtseq
{
    private PMethodstmt _methodstmt_;

    public AMethoddefMethodstmtseq()
    {
        // Constructor
    }

    public AMethoddefMethodstmtseq(
        @SuppressWarnings("hiding") PMethodstmt _methodstmt_)
    {
        // Constructor
        setMethodstmt(_methodstmt_);

    }

    @Override
    public Object clone()
    {
        return new AMethoddefMethodstmtseq(
            cloneNode(this._methodstmt_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMethoddefMethodstmtseq(this);
    }

    public PMethodstmt getMethodstmt()
    {
        return this._methodstmt_;
    }

    public void setMethodstmt(PMethodstmt node)
    {
        if(this._methodstmt_ != null)
        {
            this._methodstmt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._methodstmt_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._methodstmt_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._methodstmt_ == child)
        {
            this._methodstmt_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._methodstmt_ == oldChild)
        {
            setMethodstmt((PMethodstmt) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
